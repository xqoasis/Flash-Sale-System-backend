/*
 * This file is generated by jOOQ.
 */
package com.skillup.infrastructure.jooq.tables.records;


import com.skillup.infrastructure.jooq.tables.Employee;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends TableRecordImpl<EmployeeRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>skillup.employee.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>skillup.employee.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>skillup.employee.password</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>skillup.employee.password</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Employee.EMPLOYEE.NAME;
    }

    @Override
    public Field<String> field2() {
        return Employee.EMPLOYEE.PASSWORD;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public EmployeeRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public EmployeeRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public EmployeeRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeRecord
     */
    public EmployeeRecord() {
        super(Employee.EMPLOYEE);
    }

    /**
     * Create a detached, initialised EmployeeRecord
     */
    public EmployeeRecord(String name, String password) {
        super(Employee.EMPLOYEE);

        setName(name);
        setPassword(password);
    }
}
